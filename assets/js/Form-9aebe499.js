import{P as y,a as n,y as d,n as i,j as b,K as Y,b as Z}from"./main-7307f41e.js";import{r as s}from"./chartjs-607bc94d.js";function x(e,o){return s.Children.toArray(e).some(a=>s.isValidElement(a)&&a.type===o)}const P={type:y.string,tooltip:y.bool,as:y.elementType},R=s.forwardRef(({as:e="div",className:o,type:a="valid",tooltip:t=!1,...r},l)=>n(e,{...r,ref:l,className:d(o,`${a}-${t?"tooltip":"feedback"}`)}));R.displayName="Feedback";R.propTypes=P;const j=R,ee=s.createContext({}),F=ee,O=s.forwardRef(({id:e,bsPrefix:o,className:a,type:t="checkbox",isValid:r=!1,isInvalid:l=!1,as:m="input",...p},f)=>{const{controlId:c}=s.useContext(F);return o=i(o,"form-check-input"),n(m,{...p,ref:f,type:t,id:e||c,className:d(a,o,r&&"is-valid",l&&"is-invalid")})});O.displayName="FormCheckInput";const S=O,G=s.forwardRef(({bsPrefix:e,className:o,htmlFor:a,...t},r)=>{const{controlId:l}=s.useContext(F);return e=i(e,"form-check-label"),n("label",{...t,ref:r,htmlFor:a||l,className:d(o,e)})});G.displayName="FormCheckLabel";const v=G,E=s.forwardRef(({id:e,bsPrefix:o,bsSwitchPrefix:a,inline:t=!1,reverse:r=!1,disabled:l=!1,isValid:m=!1,isInvalid:p=!1,feedbackTooltip:f=!1,feedback:c,feedbackType:u,className:C,style:$,title:N="",type:g="checkbox",label:w,children:k,as:J="input",...Q},U)=>{o=i(o,"form-check"),a=i(a,"form-switch");const{controlId:I}=s.useContext(F),W=s.useMemo(()=>({controlId:e||I}),[I,e]),T=!k&&w!=null&&w!==!1||x(k,v),X=n(S,{...Q,type:g==="switch"?"checkbox":g,ref:U,isValid:m,isInvalid:p,disabled:l,as:J});return n(F.Provider,{value:W,children:n("div",{style:$,className:d(C,T&&o,t&&`${o}-inline`,r&&`${o}-reverse`,g==="switch"&&a),children:k||b(Y,{children:[X,T&&n(v,{title:N,children:w}),c&&n(j,{type:u,tooltip:f,children:c})]})})})});E.displayName="FormCheck";const h=Object.assign(E,{Input:S,Label:v}),M=s.forwardRef(({bsPrefix:e,type:o,size:a,htmlSize:t,id:r,className:l,isValid:m=!1,isInvalid:p=!1,plaintext:f,readOnly:c,as:u="input",...C},$)=>{const{controlId:N}=s.useContext(F);return e=i(e,"form-control"),n(u,{...C,type:o,size:t,ref:$,readOnly:c,id:r||N,className:d(l,f?`${e}-plaintext`:e,a&&`${e}-${a}`,o==="color"&&`${e}-color`,m&&"is-valid",p&&"is-invalid")})});M.displayName="FormControl";const oe=Object.assign(M,{Feedback:j}),V=s.forwardRef(({className:e,bsPrefix:o,as:a="div",...t},r)=>(o=i(o,"form-floating"),n(a,{ref:r,className:d(e,o),...t})));V.displayName="FormFloating";const ae=V,A=s.forwardRef(({controlId:e,as:o="div",...a},t)=>{const r=s.useMemo(()=>({controlId:e}),[e]);return n(F.Provider,{value:r,children:n(o,{...a,ref:t})})});A.displayName="FormGroup";const B=A,K=s.forwardRef(({as:e="label",bsPrefix:o,column:a=!1,visuallyHidden:t=!1,className:r,htmlFor:l,...m},p)=>{const{controlId:f}=s.useContext(F);o=i(o,"form-label");let c="col-form-label";typeof a=="string"&&(c=`${c} ${c}-${a}`);const u=d(r,o,t&&"visually-hidden",a&&c);return l=l||f,a?n(Z,{ref:p,as:"label",className:u,htmlFor:l,...m}):n(e,{ref:p,className:u,htmlFor:l,...m})});K.displayName="FormLabel";const te=K,_=s.forwardRef(({bsPrefix:e,className:o,id:a,...t},r)=>{const{controlId:l}=s.useContext(F);return e=i(e,"form-range"),n("input",{...t,type:"range",ref:r,className:d(o,e),id:a||l})});_.displayName="FormRange";const se=_,q=s.forwardRef(({bsPrefix:e,size:o,htmlSize:a,className:t,isValid:r=!1,isInvalid:l=!1,id:m,...p},f)=>{const{controlId:c}=s.useContext(F);return e=i(e,"form-select"),n("select",{...p,size:a,ref:f,className:d(t,e,o&&`${e}-${o}`,r&&"is-valid",l&&"is-invalid"),id:m||c})});q.displayName="FormSelect";const re=q,z=s.forwardRef(({bsPrefix:e,className:o,as:a="small",muted:t,...r},l)=>(e=i(e,"form-text"),n(a,{...r,ref:l,className:d(o,e,t&&"text-muted")})));z.displayName="FormText";const le=z,D=s.forwardRef((e,o)=>n(h,{...e,ref:o,type:"switch"}));D.displayName="Switch";const ne=Object.assign(D,{Input:h.Input,Label:h.Label}),H=s.forwardRef(({bsPrefix:e,className:o,children:a,controlId:t,label:r,...l},m)=>(e=i(e,"form-floating"),b(B,{ref:m,className:d(o,e),controlId:t,...l,children:[a,n("label",{htmlFor:t,children:r})]})));H.displayName="FloatingLabel";const ce=H,me={_ref:y.any,validated:y.bool,as:y.elementType},L=s.forwardRef(({className:e,validated:o,as:a="form",...t},r)=>n(a,{...t,ref:r,className:d(e,o&&"was-validated")}));L.displayName="Form";L.propTypes=me;const pe=Object.assign(L,{Group:B,Control:oe,Floating:ae,Check:h,Switch:ne,Label:te,Text:le,Range:se,Select:re,FloatingLabel:ce});export{pe as F};
